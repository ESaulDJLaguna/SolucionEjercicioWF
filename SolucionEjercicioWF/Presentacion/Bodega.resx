<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="BtnArticulos.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAB
        2AAAAdgB+lymcgAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAPQSURBVHhe7ZhN
        TxNBGMc5eTV+D7+Jn8O3k0dPJia2RaqYFGOvXmqA7UIpFMXwIhX0IBIPGL3ZlpZSBElpG1F5GfdZZ5fZ
        Z59ZWqHdpZ1/8rtM83Sf/78zs9PpU1JSUlJSOj89Sm9fi05ulQxYEHgw+s0kPJo/7E+W7vE226doeqtI
        NeIXVgBASMsd8jbbJ6oJPxEDAHib7RPVhJ+oAFQAKgAVQKAC0F8tsfriXcbe3vZkf+YOm87M2HUTK1XW
        2D9iMtWNz1Ifqo5nAYELoJY93TxbvMXYzHUzBKuu8Utu3hKEID4LCFwApGHMwr8AAKuutwKYvekKoGuW
        AGlYhE9/HMD/cvECmLvRwwHMn0z93gtg3jn1eyeArGEcTXsRq657NsEsN/3GQNjtZVh1XfMahMMNZZSi
        Kw9CcLxtJgTzKDz92q7rmiXQaVQAKgAVQLACUPcBQb8PiL8svwhpzqJWwA1gSMMYP+8DwlrOVdQKuAEM
        aRjj530ALmgV3ACGNCzi930ALmgVqgkR0rSI3/cBuGB5ba8lqCZESNMWQbgPwAWUSS+oJkRI40BQ7gNw
        AWXSC6oJEZfxoN0H4ALKpBe4AUzg7wNwATb4tfCT/T445o90CzeAaeavsIUvByFcgAPwMg/CDWACfx+A
        C847gE4ykK44vADcply4AAdw1iXQSQbSmw4vALcpFy7AAZwG1YhfPExtOLwA3KZcuIAy6QXViF9E9KLD
        C8BtyoULKJNeUI2I6IkVVg/HWC0SY8nER3s8nl1jqfwwG8+PsGfZz/b4aZufJfcmWGEhLe/wAnCbcuEC
        yqQXJw3QgHF2P2JSM4KwxsH41MZzk1Ru2B5v5vVnSXwN9o+7pz/AbcoVGnX+HV74VHUY9NoEYdxqQEYn
        AoDdH/uw4DblCuv5Y7FAf7ftCMDrDbCx+8duXAZMewgBzCcTq/Y4THsIAczHz7gEwnrBYVqE25Qrmio2
        xILYVKnpAObWanbjfhEZc298FsaecMRtyvU0U57Ghan3P+wAZEtga++ADWa+k011Apj2Xr88EErm69ym
        XPFM4QpeBiEt5wgBM7K0YzZANdZ+KqzfeN/L1rxIZKwwy216ayhTnHB/QY7FJktMX94xN8bZ1SpLLG6z
        wclNoql2UjFPeHDIgelOveoojB/xODy+fpVbPF2P08VN6ovCSXjg2S5O/SCir6e4teakaezSk4liGX8R
        LAc8FnSMveELt9W6hjLlsUjyZE+4SAHAtG/5l6ekabuXhzKlTDS13jA2EiOMIIeQP4LdHja8lta8kpKS
        klLPqa/vL4bXGF/JDMESAAAAAElFTkSuQmCC
</value>
  </data>
</root>